model:
  base_learning_rate: 5.0e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusionFaceBIR
  params:
    # parameterization: "eps"
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image       # no use
    cond_stage_key: caption     # no use
    image_size: 512
    channels: 4
    cond_stage_trainable: False   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False
    # for training only
    ckpt_path: ckpt/v1-5-pruned.ckpt
    unfrozen_diff: False
    random_size: False
    time_replace: 1000
    use_usm: True
    #P2 weighting, we do not use in final version
    p2_gamma: ~
    p2_k: ~
    # ignore_keys: []

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModelDualcondV2
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: False
        legacy: False
        semb_channels: 256

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        # for training only
        ckpt_path: ckpt/v1-5-pruned.ckpt
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

    structcond_stage_config:
      target: ldm.modules.diffusionmodules.openaimodel.EncoderUNetModelWT
      params:
        image_size: 96
        in_channels: 4
        model_channels: 256
        out_channels: 256
        num_res_blocks: 2
        attention_resolutions: [ 4, 2, 1 ]
        dropout: 0
        channel_mult: [ 1, 1, 2, 2 ]
        conv_resample: True
        dims: 2
        use_checkpoint: False
        use_fp16: False
        num_heads: 4
        num_head_channels: -1
        num_heads_upsample: -1
        use_scale_shift_norm: False
        resblock_updown: False
        use_new_attention_order: False

degradation:
  scale: 1
  gpu: '0'
  no_degradation_prob: 0

  resize_prob: [0.1, 0.8, 0.1]  # up, down, keep
  resize_range: [0.03,1, 1, 1.5]
  noise_range: [0.000005, 0.00005]
  poisson_scale_range: [0.00005, 0.0005]
  jpeg_range: [30, 95]

  # the second degradation process
  second_blur_prob: 0.8
  resize_prob2: [0.1, 0.8, 0.1]  # up, down, keep
  resize_range2: [0.03,1, 1, 1.2]
  noise_range2: [0.000005, 0.00005]
  poisson_scale_range2: [0.00005, 0.0005]
  jpeg_range2: [30, 95]

  gt_size: 512
  # dataset and data loader settings
  blur_kernel_size: 21
  kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
  kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
  sinc_prob: 0.1
  blur_sigma: [0.2, 3]
  betag_range: [0.5, 4]
  betap_range: [1, 2]

  blur_kernel_size2: 21
  kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
  kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
  sinc_prob2: 0.1
  blur_sigma2: [0.2, 1.5]
  betag_range2: [0.5, 4]
  betap_range2: [1, 2]

  final_sinc_prob: 0.8

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 4
    num_workers: 4
    wrap: false
    train:
      target: basicsr.data.face_dataset.FFHQAndVGGFaceDataset
      params:
        # queue_size: 180
        ffhqdataroot_gt: 'datasets/FFHQ/'                     # change to your dataset path
        vggfacedataroot_gt: 'datasets/VGGface2_HQ/'           # change to your dataset path
        use_hflip: True



lightning:
  trainer:
    gpus: '0,1'
    benchmark: True
    max_steps: 1000000
    precision: 32
    accumulate_grad_batches: 2
    strategy: "ddp"
